// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String?
  dateOfBirth   String? 
  gender        String?
  country       String?
  provider      Provider
  providerId    String?  // ID from Google/Facebook/Apple
  otp           String?  // For email-based login
  otpExpiresAt  DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum ModelTrainingStatusEnum {
  PENDING
  GENERATED
  FAILED
}

model Model {
  id String @id @default(uuid())
  name String
  type ModelTypeEnum
  age Int
  ethinicity EthinicityEnum
  eyeColor EyeColorEnum
  bald Boolean
  userId String
  triggerWord String?
  tensorPath String?
  trainingStatus ModelTrainingStatusEnum @default(PENDING)
  trainingImages TrainingImages[]
  outputImages OutputImages[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  falAiRequestId String?
  @@index([falAiRequestId])
}

model TrainingImages {
  id String @id @default(uuid())
  imageUrl String
  modelId String
  model Model @relation(fields: [modelId], references: [id])
}

model OutputImages {
  id String @id @default(uuid())
  imageUrl String @default("")
  modelId String
  userId String
  prompt String
  falAiRequestId String?
  status OutputImageStatusEnum @default(PENDING)
  model Model @relation(fields: [modelId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([falAiRequestId])

}

enum OutputImageStatusEnum {
  PENDING
  GENERATED
  FAILED
}

model Packs {
  id String @id @default(uuid())
  name String
  prompts PackPrompts[]
}

model PackPrompts {
  id String @id @default(uuid())
  prompt String
  packId String
  pack Packs @relation(fields: [packId], references: [id])
}

enum Provider {
  GOOGLE
  FACEBOOK
  APPLE
  EMAIL
}


enum ModelTypeEnum {
  MAN
  WOMEN
  OTHER
}

enum EthinicityEnum {
    WHITE
    BLACK
    ASIAN_AMERICAN
    EAST_ASIAN
    SOUTH_EAST_ASIAN
    SOUTH_ASIAN
    MIDDLE_EASTERN
    PACIFIC
    HISPANIC
}

enum EyeColorEnum {
  BLACK
  BLUE
  GREY
  BROWN 
  HAZEL
}